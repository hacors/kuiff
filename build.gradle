buildscript {
    ext {
        set('springCloudAlibabaVersion', '2.2.2.RELEASE')
        set('springBootVersion', '2.3.7.RELEASE')
        set('managementVersion', '1.0.10.RELEASE')
    }
    repositories {
        maven { url "https://repo.huaweicloud.com/repository/maven" }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${managementVersion}")
    }
}

ext {
    set('dubboVersion', '3.0.10')
}


allprojects {
    group = 'hacors'
    version = '0.0.1'
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java"
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    repositories {
        maven { url "https://repo.huaweicloud.com/repository/maven" }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencyManagement {
        imports {
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }
}

subprojects {
    dependencies {
        compileOnly 'org.projectlombok:lombok'
    }
}

project('api') {
    dependencies {
        implementation project(":contract-kuiff")
        implementation project(":core")
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
//        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
        implementation 'com.alibaba.cloud:spring-cloud-starter-dubbo'
    }
}

project('common') {
    dependencies {
    }
}

project('core') {
    dependencies {
        implementation project(":repository")
        implementation 'org.springframework.boot:spring-boot-starter'
//        implementation 'com.alibaba.cloud:spring-cloud-starter-stream-rocketmq'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project('contract-kuiff') {
    publishing {
        repositories {
            maven {
                url = uri("https://maven.pkg.github.com/hacors/kuiff")
                credentials {
                    username = project.findProperty("gpr_user")
                    password = project.findProperty("gpr_key")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
    dependencies {
    }
}

project('repository') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        runtimeOnly 'mysql:mysql-connector-java'
        runtimeOnly 'com.h2database:h2'
    }
}

project('task') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project('tool') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
    }
}

